package  {		import flash.display.MovieClip;	import flash.display.DisplayObject;	import flash.events.MouseEvent;	import gs.TweenLite;	import gs.easing.*;	public class MainGame extends MovieClip{				private var mSource:Array;		private var mConfigData:Object;		private var mCurrentItemName:String;		private var mCanTouch:Boolean = false;		private var mCount = 0		public function MainGame()		{			trace("AASDFASDFASDFASDFFSXASDFASD")		}				public function init():void{			this.mCanTouch = false;			// constructor code			var configData = {};			configData.blue = ["Newspaper","KuangQianShuiPing","BeerPing","WanJuYaZi","BookBag","Book","KeLePingZi","YiLaGuan","MoShuiPing","FengShan","PingGuan","TieGuo","MilkBox"];			configData.kitchen = ["XiHuLu","BaiCai","YanTou","NiaoBuShi","ZhuGuTou","GuoPi","Hua"];			configData.bad = ["CunQiGuan","DianChi","YaoPin","WenDuJi","YouQiTong","KouHong"];			configData.other = ["WeiShengZhi","SuLiaoDai","SuiBoLi","HuiTu","FeiJiuYiFu","DiTan","ChuangDan","XieZi"];			this.mConfigData = configData;						var source:Array = new Array();			source = source.concat(configData.blue);			source = source.concat(configData.kitchen);			source = source.concat(configData.bad);			source = source.concat(configData.other);			this.mSource = source;			this.mCount = this.mSource.length;			trace(source);			var str:String = "剩余题目："+ this.mCount			this.txtNumber.text = str						resetAll();						createNewItem();		}		private function resetAll():void{			var tongs = ["blue","kitchen","bad","other"]			for (var key:String in tongs){				var name:String = tongs[key]				trace(name)				this[name].stop()							}			this["blue"].addEventListener(MouseEvent.MOUSE_DOWN,onTouchBlueTong)						this["kitchen"].addEventListener(MouseEvent.MOUSE_DOWN,onTouchkitchenTong)						this["bad"].addEventListener(MouseEvent.MOUSE_DOWN,onTouchBadTong)						this["other"].addEventListener(MouseEvent.MOUSE_DOWN,onTouchOtherTong)								}		private function createNewItem():void{			Math.random()			Math.random()			Math.random()			var index:int = Math.round(Math.random()*(this.mSource.length - 1) );			//var itemName = this.mSource[index];			var itemName = this.mSource.splice(index,1)			trace("选中的物品是"+ index +',itemName is '+ itemName);			var className = this.loaderInfo.applicationDomain.getDefinition(itemName);			this.mCurrentItemName = itemName			var itemNode:DisplayObject = new className();			itemNode.name = itemName			//this.holderContainer.addChild(itemNode);			itemNode.x = this.holderContainer.x			itemNode.y = this.holderContainer.y			this.addChild(itemNode)			itemNode.scaleX = 0.2			itemNode.scaleY = 0.2			TweenLite.to(itemNode,0.6,{scaleX:1,scaleY:1,onComplete:onShowItemComplete})		}		private function onShowItemComplete():void{			this.mCanTouch = true		}		private function showNumber():void{			var str:String = "剩余题目："+ this.mCount			this.txtNumber.text = str		}		private function onTouchBlueTong(evt):void{			var res:Boolean = this.touchTongToAction("blue")			if(res){				this.mCount = this.mCount - 1 				playTheFlyingAnimation("blue")			}		}		private function onTouchkitchenTong(evt):void{			var res:Boolean = this.touchTongToAction("kitchen")			if(res){				this.mCount = this.mCount - 1 				playTheFlyingAnimation("kitchen")			}		}		private function onTouchBadTong(evt):void{			var res:Boolean = this.touchTongToAction("bad")			if(res){				this.mCount = this.mCount - 1 				playTheFlyingAnimation("bad")			}		}		private function onTouchOtherTong(evt):void{			var res:Boolean = this.touchTongToAction("other")			if(res){				this.mCount = this.mCount - 1 				playTheFlyingAnimation("other")			}		}		private function touchTongToAction(tongName):Boolean{			trace("touch tong name is "+ tongName);			var rightTongName = isWhichKindWithName(this.mCurrentItemName)			if (tongName == rightTongName){				this[tongName].gotoAndPlay("happy")				return true			}else{				this[tongName].gotoAndPlay("sad");				return false			}		}		private function playTheFlyingAnimation(tongName):void{			this.mCanTouch = false;			this.showNumber()			var itemDisplayObject = this.getChildByName(this.mCurrentItemName)			TweenLite.to(itemDisplayObject,1,{x :this[tongName].x,y:this[tongName].y - 100,onComplete:removeItemAfterMoveOver});			}		private function removeItemAfterMoveOver():void		{			//var req:URLRequest = new URLRequest("click.mp3");			//var s:Sound = new Sound();			//s.load(req)			var itemDisplayObject = this.getChildByName(this.mCurrentItemName)			this.removeChild(itemDisplayObject)			if (this.mCount == 0 ){				var dialog:CommonDialog = new CommonDialog()				stage.addChild(dialog)				dialog.x = 260				dialog.y = 300			}						this.createNewItem()		}		private function onBtnRightTouched(evt):void{			trace("onBtnRightTouched")		}		private function onBtnLeftTouched(evt):void{			trace("onBtnLeftTouched")			}		private function isWhichKindWithName(name):String{							for (var key:String in this.mConfigData){				var items :Array = this.mConfigData[key];									if (items.indexOf(name) != -1){					return key				}			} 			return null		}	}	}